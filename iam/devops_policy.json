{
  "Version": "2012-10-17",
  "Statement": [
      {
          "Sid": "AllowAllActionsInEuWest1",
          "Effect": "Allow",
          "Action": [
              "cloudformation:*",
              "ec2:*",
              "cloudfront:*",
              "elasticloadbalancing:*",
              "autoscaling:*",
              "cloudwatch:*",
              "cloudtrail:*",
              "codepipeline:*",
              "codebuild:*",
              "codedeploy:*",
              "s3:*",
              "ecr:*",
              "events:*",
              "logs:*",
              "kms:*",
              "lambda:*",
              "route53:*",
              "tag:*",
              "sns:*",
              "apigateway:*",
              "ssm:*",
              "secretsmanager:*",
              "ce:*"
          ],
          "Resource": [
              "*"
          ],
          "Condition": {
              "StringEquals": {
                  "aws:RequestedRegion": "eu-west-2"
              }
          }
      },
      {
          "Sid": "AllowIAMReadOnly",
          "Effect": "Allow",
          "Action": [
              "iam:Get*",
              "iam:List*",
              "access-analyzer:*"
          ],
          "Resource": "*"
      },
      {
          "Sid": "AllowIAMRestrictedCreateDelete",
          "Effect": "Allow",
          "Action": [
              "iam:CreateRole",
              "iam:DeleteRole",
              "iam:CreatePolicy",
              "iam:DeletePolicy",
              "iam:AttachRolePolicy",
              "iam:PutRolePolicy",
              "iam:DeleteRolePolicy",
              "iam:Tag*"
          ],
          "Resource": "*"
      },
      {
          "Sid": "AllowIAMServiceLinkedRoles",
          "Effect": "Allow",
          "Action": "iam:CreateServiceLinkedRole",
          "Resource": "*",
          "Condition": {
              "StringEquals": {
                  "iam:AWSServiceName": [
                      "autoscaling.amazonaws.com",
                      "ec2scheduled.amazonaws.com",
                      "elasticloadbalancing.amazonaws.com",
                      "spot.amazonaws.com",
                      "spotfleet.amazonaws.com",
                      "transitgateway.amazonaws.com",
                      "replication.ecr.amazonaws.com",
                      "events.amazonaws.com"
                  ]
              }
          }
      },
      {
          "Sid": "AllowIAMPassRoles",
          "Effect": "Allow",
          "Action": "iam:PassRole",
          "Resource": "*",
          "Condition": {
              "StringEquals": {
                  "iam:PassedToService": [
                      "lambda.amazonaws.com",
                      "cloudformation.amazonaws.com",
                      "codebuild.amazonaws.com",
                      "codepipeline.amazonaws.com"
                  ]
              }
          }
      },
      {
          "Sid": "AllowIAMChangeSecurity",
          "Effect": "Allow",
          "Action": [
              "iam:ChangePassword",
              "iam:GetUser",
              "iam:CreateAccessKey",
              "iam:DeleteAccessKey",
              "iam:ListAccessKeys",
              "iam:UpdateAccessKey",
              "iam:GetAccessKeyLastUsed",
              "iam:DeleteSigningCertificate",
              "iam:ListSigningCertificates",
              "iam:UpdateSigningCertificate",
              "iam:UploadSigningCertificate",
              "iam:DeleteSSHPublicKey",
              "iam:GetSSHPublicKey",
              "iam:ListSSHPublicKeys",
              "iam:UpdateSSHPublicKey",
              "iam:UploadSSHPublicKey",
              "iam:CreateServiceSpecificCredential",
              "iam:DeleteServiceSpecificCredential",
              "iam:ListServiceSpecificCredentials",
              "iam:ResetServiceSpecificCredential",
              "iam:UpdateServiceSpecificCredential",
              "iam:DeactivateMFADevice",
              "iam:EnableMFADevice",
              "iam:ListMFADevices",
              "iam:ResyncMFADevice"
          ],
          "Resource": "arn:aws:iam::*:user/${aws:username}"
      },
      {
          "Sid": "AllowIAMGeneral",
          "Effect": "Allow",
          "Action": [
              "iam:GetAccountPasswordPolicy",
              "iam:ListVirtualMFADevices"
          ],
          "Resource": "*"
      },
      {
          "Sid": "AllowManageOwnVirtualMFADevice",
          "Effect": "Allow",
          "Action": [
              "iam:CreateVirtualMFADevice"
          ],
          "Resource": "arn:aws:iam::*:mfa/*"
      }
  ]
}
